unit Unit_Method;

interface
type  TPerson=class
      public
        procedure Static_Method();//静态方法
        function Virtual_Method(): Integer;virtual;//虚拟方法
        function Dynamic_Method(): Integer;dynamic;//动态方法
        class procedure Class_Method();//类方法
        procedure Abstract_Method();virtual;abstract;
      end;
      TUser=class(TPerson)
        function Virtual_Method(): Integer;//虚拟方法可以不加override
      end;
implementation

{ TPerson }

class procedure TPerson.Class_Method;
begin
  Writeln('类方法');
end;

function TPerson.Dynamic_Method: Integer;
begin

end;

procedure TPerson.Static_Method;
begin
  Writeln('静态方法');
end;

function TPerson.Virtual_Method: Integer;
begin
  //一般为空，此处为测试用
  Writeln('父类虚拟方法');
end;

{ TUser }

function TUser.Virtual_Method: Integer;
begin
  Writeln('子类虚拟方法');
end;

end.
